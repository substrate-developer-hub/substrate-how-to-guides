(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{188:function(e,t,n){"use strict";n.r(t),n.d(t,"MDXContext",(function(){return d})),n.d(t,"MDXProvider",(function(){return u})),n.d(t,"mdx",(function(){return h})),n.d(t,"useMDXComponents",(function(){return m})),n.d(t,"withMDXComponents",(function(){return p}));var a=n(0),r=n.n(a);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(){return(i=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},s=Object.keys(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var d=r.a.createContext({}),p=function(e){return function(t){var n=m(t.components);return r.a.createElement(e,i({},t,{components:n}))}},m=function(e){var t=r.a.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=m(e.components);return r.a.createElement(d.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},g=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,s=e.originalType,i=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),d=m(n),p=a,u=d["".concat(i,".").concat(p)]||d[p]||b[p]||s;return n?r.a.createElement(u,o(o({ref:t},l),{},{components:n})):r.a.createElement(u,o({ref:t},l))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=n.length,i=new Array(s);i[0]=g;var l={};for(var o in t)hasOwnProperty.call(t,o)&&(l[o]=t[o]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var c=2;c<s;c++)i[c]=n[c];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,n)}g.displayName="MDXCreateElement"},60:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return l})),n.d(t,"toc",(function(){return o})),n.d(t,"default",(function(){return d}));var a=n(3),r=n(8),s=(n(0),n(188)),i={sidebar_position:7,keywords:"basics, testing, runtime"},l={unversionedId:"testing/basic-pallet-testing",id:"testing/basic-pallet-testing",isDocsHomePage:!1,title:"Setting up tests for your pallet",description:"Get into the habit of writing tests as you write your pallet &mdash; it's good practice!",source:"@site/docs/04-testing/basic-pallet-testing.md",sourceDirName:"04-testing",slug:"/testing/basic-pallet-testing",permalink:"/substrate-how-to-guides/docs/testing/basic-pallet-testing",editUrl:"https://github.com/substrate-developer-hub/substrate-how-to-guides/edit/main/docs/04-testing/basic-pallet-testing.md",version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7,keywords:"basics, testing, runtime"},sidebar:"tutorialSidebar",previous:{title:"Testing a transfer function",permalink:"/substrate-how-to-guides/docs/testing/test-transfer"},next:{title:"Basic storage migration",permalink:"/substrate-how-to-guides/docs/storage-migrations/nicks-migration"}},o=[{value:"Goal",id:"goal",children:[]},{value:"Use cases",id:"use-cases",children:[]},{value:"Overview",id:"overview",children:[]},{value:"Steps",id:"steps",children:[{value:"1. Use the template node as boilerplate",id:"1-use-the-template-node-as-boilerplate",children:[]},{value:"2. Create a mock runtime to test your pallet",id:"2-create-a-mock-runtime-to-test-your-pallet",children:[]},{value:"3. Setup and create tests",id:"3-setup-and-create-tests",children:[]},{value:"4. Run your tests",id:"4-run-your-tests",children:[]}]},{value:"Examples",id:"examples",children:[]},{value:"Related material",id:"related-material",children:[]}],c={toc:o};function d(e){var t=e.components,n=Object(r.default)(e,["components"]);return Object(s.mdx)("wrapper",Object(a.default)({},c,n,{components:t,mdxType:"MDXLayout"}),Object(s.mdx)("p",null,Object(s.mdx)("em",{parentName:"p"},"Get into the habit of writing tests as you write your pallet ","\u2014"," it's good practice!")),Object(s.mdx)("h2",{id:"goal"},"Goal"),Object(s.mdx)("p",null,"Learn how to setup the scaffolding required to write tests for your pallet."),Object(s.mdx)("h2",{id:"use-cases"},"Use cases"),Object(s.mdx)("p",null,"Writing and running unit tests for a pallet."),Object(s.mdx)("h2",{id:"overview"},"Overview"),Object(s.mdx)("p",null,"This guide steps through how to use ",Object(s.mdx)("inlineCode",{parentName:"p"},"mock.rs")," and ",Object(s.mdx)("inlineCode",{parentName:"p"},"test.rs")," as a basis for testing your pallet. We'll be\nusing the node template for the scaffolding of the ",Object(s.mdx)("inlineCode",{parentName:"p"},"mock.rs")," file and an arbitrary pallet ","\u2014"," called ",Object(s.mdx)("inlineCode",{parentName:"p"},"pallet-testing"),"\n","\u2014"," to give this guide some context. This pallet will contain a single function called ",Object(s.mdx)("inlineCode",{parentName:"p"},"add_value"),", that takes an origin and\na ",Object(s.mdx)("inlineCode",{parentName:"p"},"u32")," and returns ",Object(s.mdx)("inlineCode",{parentName:"p"},"Ok(())")," if the value is less than or equal to a constant called ",Object(s.mdx)("inlineCode",{parentName:"p"},"MaxValue")," that we specify in the mock runtime."),Object(s.mdx)("h2",{id:"steps"},"Steps"),Object(s.mdx)("h3",{id:"1-use-the-template-node-as-boilerplate"},"1. Use the template node as boilerplate"),Object(s.mdx)("p",null,"Inside ",Object(s.mdx)("inlineCode",{parentName:"p"},"pallet-testing/src"),", the first thing we need to do is create two empty files: ",Object(s.mdx)("inlineCode",{parentName:"p"},"mock.rs")," and ",Object(s.mdx)("inlineCode",{parentName:"p"},"tests.rs"),"."),Object(s.mdx)("p",null,"Paste in the contents from ",Object(s.mdx)("a",{parentName:"p",href:"https://github.com/substrate-developer-hub/substrate-node-template/blob/467927bda05a56dfe57690aec93ff504a6009daa/pallets/template/src/mock.rs#L1-L61"},Object(s.mdx)("inlineCode",{parentName:"a"},"template/src/mock.rs")),". We'll use this as boilerpate\nwhich we'll customize for our ",Object(s.mdx)("inlineCode",{parentName:"p"},"pallet-testing")," pallet."),Object(s.mdx)("h3",{id:"2-create-a-mock-runtime-to-test-your-pallet"},"2. Create a mock runtime to test your pallet"),Object(s.mdx)("p",null,"Start by modifying ",Object(s.mdx)("inlineCode",{parentName:"p"},"pallet-testing/src/mock.rs")," to include the ",Object(s.mdx)("inlineCode",{parentName:"p"},"pallet-testing")," pallet. This involves changes in the following code sections:"),Object(s.mdx)("h4",{id:"dependencies"},"Dependencies"),Object(s.mdx)("p",null,"Replace the first line with the name of the pallet, in our case ",Object(s.mdx)("inlineCode",{parentName:"p"},"pallet_testing"),":"),Object(s.mdx)("pre",null,Object(s.mdx)("code",{parentName:"pre",className:"language-rust"},"use crate as pallet_testing;\n/*--snip--*/\n")),Object(s.mdx)("h4",{id:"configure-mock-runtime"},"Configure mock runtime"),Object(s.mdx)("p",null,"In ",Object(s.mdx)("inlineCode",{parentName:"p"},"frame_support::construct_runtime!"),", replace ",Object(s.mdx)("inlineCode",{parentName:"p"},"pallet_template")," with the name of your pallet, in our\ncase ",Object(s.mdx)("inlineCode",{parentName:"p"},"pallet_testing"),":"),Object(s.mdx)("pre",null,Object(s.mdx)("code",{parentName:"pre",className:"language-rust"},"/*--snip--*/\n    TestingPallet: pallet_testing::{Module, Call, Storage, Event<T>},\n/*--snip--*/\n")),Object(s.mdx)("h4",{id:"implement-your-pallet-for-the-mock-runtime"},"Implement your pallet for the mock runtime"),Object(s.mdx)("p",null,"Replace ",Object(s.mdx)("inlineCode",{parentName:"p"},"impl pallet_template::Config for Test {...}")," with the your configuration types and any\nconstant values your pallet requires:"),Object(s.mdx)("pre",null,Object(s.mdx)("code",{parentName:"pre",className:"language-rust"},"parameter_types! {\n    pub const MaxValue: u32 = 50;\n}\n\nimpl pallet_testing::Config for Test {\n    type Event = Event;\n    type MaxValue = MaxValue;\n}\n")),Object(s.mdx)("p",null,"To put the mock runtime to use, we need to set up our ",Object(s.mdx)("inlineCode",{parentName:"p"},"tests.rs")," file for the ",Object(s.mdx)("inlineCode",{parentName:"p"},"pallet-testing")," pallet."),Object(s.mdx)("h3",{id:"3-setup-and-create-tests"},"3. Setup and create tests"),Object(s.mdx)("p",null,"In ",Object(s.mdx)("inlineCode",{parentName:"p"},"tests.rs"),", start by importing the dependencies you'll need from ",Object(s.mdx)("inlineCode",{parentName:"p"},"lib.rs")," using ",Object(s.mdx)("inlineCode",{parentName:"p"},"super"),":"),Object(s.mdx)("pre",null,Object(s.mdx)("code",{parentName:"pre",className:"language-rust"},"use super::*;\n")),Object(s.mdx)("h4",{id:"testing-that-errors-work"},"Testing that errors work"),Object(s.mdx)("p",null,"This will test whether the error works as intended:"),Object(s.mdx)("pre",null,Object(s.mdx)("code",{parentName:"pre",className:"language-rust"},'#[test]\nfn error_works(){\n    new_test_ext().execute_with(|| {\n        assert_err!(\n            TestingPallet::add_value(Origin::signed(1), 51),\n            "value must be <= maximum add amount constant"\n        );\n    })\n}\n\n')),Object(s.mdx)("h4",{id:"testing-known-working-case"},"Testing known working case"),Object(s.mdx)("p",null,"Create a test that should work:"),Object(s.mdx)("pre",null,Object(s.mdx)("code",{parentName:"pre",className:"language-rust"},"#[test]\nfn test_should_work() {\n    new_test_ext().execute_with(|| {\n        assert_ok!(\n            TestingPallet::add_value(Origin::signed(1), 10)\n        );\n    })\n}\n")),Object(s.mdx)("h4",{id:"testing-known-failing-case"},"Testing known failing case"),Object(s.mdx)("p",null,"And another that should fail:"),Object(s.mdx)("pre",null,Object(s.mdx)("code",{parentName:"pre",className:"language-rust"},"#[test]\nfn test_should_fail() {\n    new_test_ext().execute_with(|| {\n        assert_ok!(\n            TestingPallet::add_value(Origin::signed(1), 100)\n        );\n    })\n}\n")),Object(s.mdx)("h3",{id:"4-run-your-tests"},"4. Run your tests"),Object(s.mdx)("p",null,"Execute the following command from your pallet's directory:"),Object(s.mdx)("pre",null,Object(s.mdx)("code",{parentName:"pre",className:"language-bash"},"cargo test\n")),Object(s.mdx)("h2",{id:"examples"},"Examples"),Object(s.mdx)("ul",null,Object(s.mdx)("li",{parentName:"ul"},Object(s.mdx)("a",{parentName:"li",href:"https://github.com/substrate-developer-hub/substrate-node-template/blob/master/pallets/template/src/tests.rs#L1-L23"},"template pallet tests")),Object(s.mdx)("li",{parentName:"ul"},Object(s.mdx)("a",{parentName:"li",href:"https://github.com/sacha-l/substrate-how-to-guides/blob/main/how-to-substrate/example-code/template-node/pallets/reward-coin/src/tests.rs#L1-L38"},"reward-coin tests"))),Object(s.mdx)("h2",{id:"related-material"},"Related material"),Object(s.mdx)("h4",{id:"guides"},"Guides"),Object(s.mdx)("ul",null,Object(s.mdx)("li",{parentName:"ul"},Object(s.mdx)("a",{parentName:"li",href:"./test-transfer"},"Testing a transfer function")),Object(s.mdx)("li",{parentName:"ul"},Object(s.mdx)("a",{parentName:"li",href:"../storage-migrations/migration-tests"},"Migration tests"))),Object(s.mdx)("h4",{id:"knowledgebase"},"Knowledgebase"),Object(s.mdx)("ul",null,Object(s.mdx)("li",{parentName:"ul"},Object(s.mdx)("a",{parentName:"li",href:"https://substrate.dev/docs/en/knowledgebase/runtime/tests#mock-runtime-environment"},"Mock runtime"))),Object(s.mdx)("h4",{id:"rust-docs"},"Rust docs"),Object(s.mdx)("ul",null,Object(s.mdx)("li",{parentName:"ul"},Object(s.mdx)("a",{parentName:"li",href:"https://substrate.dev/rustdocs/latest/frame_support/macro.assert_ok.html"},Object(s.mdx)("inlineCode",{parentName:"a"},"assert_ok!"))),Object(s.mdx)("li",{parentName:"ul"},Object(s.mdx)("a",{parentName:"li",href:"https://substrate.dev/rustdocs/latest/frame_support/macro.assert_err.html"},Object(s.mdx)("inlineCode",{parentName:"a"},"assert_err!")))))}d.isMDXComponent=!0}}]);