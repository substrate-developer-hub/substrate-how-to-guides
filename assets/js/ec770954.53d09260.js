(window.webpackJsonp=window.webpackJsonp||[]).push([[53],{188:function(e,t,n){"use strict";n.r(t),n.d(t,"MDXContext",(function(){return d})),n.d(t,"MDXProvider",(function(){return m})),n.d(t,"mdx",(function(){return f})),n.d(t,"useMDXComponents",(function(){return p})),n.d(t,"withMDXComponents",(function(){return u}));var a=n(0),r=n.n(a);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(){return(i=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var d=r.a.createContext({}),u=function(e){return function(t){var n=p(t.components);return r.a.createElement(e,i({},t,{components:n}))}},p=function(e){var t=r.a.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},m=function(e){var t=p(e.components);return r.a.createElement(d.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},h=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),d=p(n),u=a,m=d["".concat(i,".").concat(u)]||d[u]||b[u]||o;return n?r.a.createElement(m,l(l({ref:t},s),{},{components:n})):r.a.createElement(m,l({ref:t},s))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=h;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var c=2;c<o;c++)i[c]=n[c];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,n)}h.displayName="MDXCreateElement"},86:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return s})),n.d(t,"toc",(function(){return l})),n.d(t,"default",(function(){return d}));var a=n(3),r=n(8),o=(n(0),n(188)),i={title:"Kitty Front-end Outline",sidebar_position:1,keywords:"polkadotjs api, frontend, intermediate, runtime"},s={unversionedId:"tutorials/Kitties/Part 2/kitties-frontend-1",id:"tutorials/Kitties/Part 2/kitties-frontend-1",isDocsHomePage:!1,title:"Kitty Front-end Outline",description:"Overview",source:"@site/docs/09-tutorials/01-Kitties/Part 2/kitties-frontend-1.md",sourceDirName:"09-tutorials/01-Kitties/Part 2",slug:"/tutorials/Kitties/Part 2/kitties-frontend-1",permalink:"/substrate-how-to-guides/docs/tutorials/Kitties/Part 2/kitties-frontend-1",editUrl:"https://github.com/substrate-developer-hub/substrate-how-to-guides/edit/main/docs/09-tutorials/01-Kitties/Part 2/kitties-frontend-1.md",version:"current",sidebarPosition:1,frontMatter:{title:"Kitty Front-end Outline",sidebar_position:1,keywords:"polkadotjs api, frontend, intermediate, runtime"},sidebar:"tutorialSidebar",previous:{title:"Interacting with your Kitties",permalink:"/substrate-how-to-guides/docs/tutorials/Kitties/Part 1/interacting-functions"},next:{title:"Creating Custom Components",permalink:"/substrate-how-to-guides/docs/tutorials/Kitties/Part 2/kitties-frontend-2"}},l=[{value:"Overview",id:"overview",children:[]},{value:"Learning outcomes",id:"learning-outcomes",children:[]},{value:"Steps",id:"steps",children:[{value:"1. Understanding the Front-end template",id:"1-understanding-the-front-end-template",children:[]},{value:"2. Specifying Types",id:"2-specifying-types",children:[]},{value:"3. Sketching out our application components",id:"3-sketching-out-our-application-components",children:[]},{value:"4. Polkadot JS API basics",id:"4-polkadot-js-api-basics",children:[]}]},{value:"Next steps",id:"next-steps",children:[]}],c={toc:l};function d(e){var t=e.components,n=Object(r.default)(e,["components"]);return Object(o.mdx)("wrapper",Object(a.default)({},c,n,{components:t,mdxType:"MDXLayout"}),Object(o.mdx)("h2",{id:"overview"},"Overview"),Object(o.mdx)("p",null,"In Part 1 we created all of the back-end portion of our Kitties application. In this part, it's time to\nbuild a user interface which can access and interact with our\ncustom storage items and functions. We'll be using the Front-end Template, a React app with some basic functionality, and the\nPolkadot JS API to make RPC's to our chain's runtime."),Object(o.mdx)("p",null,"In Part 2, there will only be two main sections: the first focussing on setting up the Front-end Template and the second\nfocussing on building custom React components that can interact with our kitty-node."),Object(o.mdx)("p",null,"We'll be using a ",Object(o.mdx)("a",{parentName:"p",href:"https://framagit.org/Deevad/cat-avatar-generator"},"library for generating Cat avatars"),", licensed under ",Object(o.mdx)("a",{parentName:"p",href:"https://creativecommons.org/licenses/by/4.0/"},"CC-By 4.0")," attribution. Thank you ",Object(o.mdx)("a",{parentName:"p",href:"https://framagit.org/Deevad"},"David Revoy's")," for making this available."),Object(o.mdx)("h2",{id:"learning-outcomes"},"Learning outcomes"),Object(o.mdx)("p",null,"\u27a1\ufe0f Connect your chain to the Substrate front-end template."),Object(o.mdx)("h2",{id:"steps"},"Steps"),Object(o.mdx)("h3",{id:"1-understanding-the-front-end-template"},"1. Understanding the Front-end template"),Object(o.mdx)("p",null,"The first step of this tutorial is to familiarize yourself with the Substrate Front-end template. In this step we will go through an overview of what our React app will look like and the different components we'll be building. "),Object(o.mdx)("p",null,"Start by ",Object(o.mdx)("a",{parentName:"p",href:"https://github.com/substrate-developer-hub/substrate-front-end-template"},"installing the Front-end Template"),":"),Object(o.mdx)("pre",null,Object(o.mdx)("code",{parentName:"pre",className:"language-bash"},"git clone https://github.com/substrate-developer-hub/substrate-front-end-template.git\ncd substrate-front-end-template\nyarn install\n")),Object(o.mdx)("p",null,"You'll notice the following structure (we've only including the directories we care about for this tutorial):"),Object(o.mdx)("pre",null,Object(o.mdx)("code",{parentName:"pre"},"substrate-front-end-template\n|\n...\n|\n+-- public\n|   |\n|   +-- assets              <-- Kitty avatar PNG files\n|\n+-- src                     <-- our React components\n|   |\n|   +-- __tests__\n|   |\n|   +-- config              <-- where to specify our custom types\n|   |\n|   +-- substrate-lib       <-- lib to give access to PolkadotJS API \n|   |   |\n|   |   +-- components      <-- contains TxButton, used throughout our application\n|   |\n|   AccountSelector.js\n|   App.js\n|   Balances.js\n|   BlockNumber.js\n|   Events.js\n|   index.js\n|   interactor.js\n|   Metadata.js\n|   NodeInfo.js\n|   TemplateModule.js\n|   Transfer.js\n|   Upgrade.js\n|\n...\n")),Object(o.mdx)("p",null,"In a separate terminal, start an instance of ",Object(o.mdx)("inlineCode",{parentName:"p"},"node-kitties")," that you built in Part 1:"),Object(o.mdx)("pre",null,Object(o.mdx)("code",{parentName:"pre",className:"language-bash"},"# Launch `node-kitties` from its directory.\ncd kitties/\n./target/release/node-kitties --dev --tmp\n")),Object(o.mdx)("p",null,"Now, in the same directory as where you installed the Front-end template, launch it:"),Object(o.mdx)("pre",null,Object(o.mdx)("code",{parentName:"pre",className:"language-bash"},"yarn start\n")),Object(o.mdx)("p",null,"You should see a tab open up with the front-end template displaying basic features of your chain."),Object(o.mdx)("p",null,"Notice that it comes with a number of prebuilt features, each being rendered by the provided components of the Front-end Template."),Object(o.mdx)("h3",{id:"2-specifying-types"},"2. Specifying Types"),Object(o.mdx)("p",null,"An important starting point when setting up a custom front-end for a Substrate node is creating a JSON file with all\nof the node's custom types. These are types that we created in our pallet that the Polkadot JS API doesn't know about.\nLearn more about ",Object(o.mdx)("a",{parentName:"p",href:"https://polkadot.js.org/docs/api/start/types.extend/"},"Extending types")," in the Polkadot JS API documentation."),Object(o.mdx)("p",null,"In our case, we have two custom types we'll need to add: the ",Object(o.mdx)("inlineCode",{parentName:"p"},"Gender")," enum and the ",Object(o.mdx)("inlineCode",{parentName:"p"},"Kitty")," struct."),Object(o.mdx)("p",null,"To do this, go into ",Object(o.mdx)("inlineCode",{parentName:"p"},"src/config/types.json")," and paste in the following lines:"),Object(o.mdx)("pre",null,Object(o.mdx)("code",{parentName:"pre",className:"language-json"},'{\n  "Gender": {\n    "_enum": ["Male", "Female"]\n  },\n  "Kitty": {\n    "dna": "[u8; 16]",\n    "price": "Option<Balance>",\n    "gender": "Gender",\n    "owner": "AccountId"\n  }\n}\n')),Object(o.mdx)("h3",{id:"3-sketching-out-our-application-components"},"3. Sketching out our application components"),Object(o.mdx)("p",null,Object(o.mdx)("a",{parentName:"p",href:"https://github.com/substrate-developer-hub/substrate-front-end-template"},"Substrate Frontend Template")," components use PolkadotJS Apps and an\nRPC endpoint to communicate with a Substrate node. This allows us to use it\nto read storage items, and pass in inputs to allows users to make extrinsics by calling our pallet's\ndispatchable functions. Before we get to that, let's sketch out the different parts of our application."),Object(o.mdx)("p",null,"We'll be building out a total of 3 components:"),Object(o.mdx)("ol",null,Object(o.mdx)("li",{parentName:"ol"},Object(o.mdx)("inlineCode",{parentName:"li"},"KittyCards.js"),": this will render a React card component containing a Kitty's relevant information, avatar and buttons to interact with it."),Object(o.mdx)("li",{parentName:"ol"},Object(o.mdx)("inlineCode",{parentName:"li"},"KittyAvatar.js"),": this will handle the logic to map Kitty DNA to the library of PNGs we're using to create unique Kitty avatars."),Object(o.mdx)("li",{parentName:"ol"},Object(o.mdx)("inlineCode",{parentName:"li"},"Kitties.js"),": this will be what we render to ",Object(o.mdx)("inlineCode",{parentName:"li"},"App.js"),".")),Object(o.mdx)("h3",{id:"4-polkadot-js-api-basics"},"4. Polkadot JS API basics"),Object(o.mdx)("p",null,"Before moving on to the next section, we reccommend you read a little Polkadot JS API documentation to understand the basics of\nhow we'll be querying storage and triggering transactions. Here are some good resources:"),Object(o.mdx)("ul",null,Object(o.mdx)("li",{parentName:"ul"},Object(o.mdx)("a",{parentName:"li",href:"https://polkadot.js.org/docs/api/start/basics"},"Basics and Metadata")),Object(o.mdx)("li",{parentName:"ul"},Object(o.mdx)("a",{parentName:"li",href:"https://polkadot.js.org/docs/api/start/api.rpc"},"RPC queries")),Object(o.mdx)("li",{parentName:"ul"},Object(o.mdx)("a",{parentName:"li",href:"https://polkadot.js.org/docs/substrate/storage"},"Storage methods")," such as ",Object(o.mdx)("inlineCode",{parentName:"li"},"api.query.<module>.<method>")," to access a pallet instance in a runtime"),Object(o.mdx)("li",{parentName:"ul"},Object(o.mdx)("a",{parentName:"li",href:"https://polkadot.js.org/docs/substrate/extrinsics"},"Extrinsics methods")," such as ",Object(o.mdx)("inlineCode",{parentName:"li"},"api.tx.<module>.<method>")," to trigger a transaction.")),Object(o.mdx)("h2",{id:"next-steps"},"Next steps"),Object(o.mdx)("ul",null,Object(o.mdx)("li",{parentName:"ul"},"Build the Kitties.js component"),Object(o.mdx)("li",{parentName:"ul"},"Build the KittyAvatar.js component"),Object(o.mdx)("li",{parentName:"ul"},"Build the KittyCards.js Component")))}d.isMDXComponent=!0}}]);