(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{188:function(e,t,n){"use strict";n.r(t),n.d(t,"MDXContext",(function(){return c})),n.d(t,"MDXProvider",(function(){return u})),n.d(t,"mdx",(function(){return g})),n.d(t,"useMDXComponents",(function(){return p})),n.d(t,"withMDXComponents",(function(){return m}));var a=n(0),i=n.n(a);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(){return(o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function d(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var c=i.a.createContext({}),m=function(e){return function(t){var n=p(t.components);return i.a.createElement(e,o({},t,{components:n}))}},p=function(e){var t=i.a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=p(e.components);return i.a.createElement(c.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},h=i.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,o=e.parentName,s=d(e,["components","mdxType","originalType","parentName"]),c=p(n),m=a,u=c["".concat(o,".").concat(m)]||c[m]||b[m]||r;return n?i.a.createElement(u,l(l({ref:t},s),{},{components:n})):i.a.createElement(u,l({ref:t},s))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,o=new Array(r);o[0]=h;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var d=2;d<r;d++)o[d]=n[d];return i.a.createElement.apply(null,o)}return i.a.createElement.apply(null,n)}h.displayName="MDXCreateElement"},62:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return s})),n.d(t,"toc",(function(){return l})),n.d(t,"default",(function(){return c}));var a=n(3),i=n(8),r=(n(0),n(188)),o={sidebar_position:2,keywords:"pallet design, intermediate, runtime"},s={unversionedId:"tutorials/Kitties/Part 1/basic-setup",id:"tutorials/Kitties/Part 1/basic-setup",isDocsHomePage:!1,title:"Basic set-up",description:"This tutorial assumes that you have already installed the prerequisites for building with Substrate on your machine.",source:"@site/docs/09-tutorials/01-Kitties/Part 1/basic-setup.md",sourceDirName:"09-tutorials/01-Kitties/Part 1",slug:"/tutorials/Kitties/Part 1/basic-setup",permalink:"/substrate-how-to-guides/docs/tutorials/Kitties/Part 1/basic-setup",editUrl:"https://github.com/substrate-developer-hub/substrate-how-to-guides/edit/main/docs/09-tutorials/01-Kitties/Part 1/basic-setup.md",version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,keywords:"pallet design, intermediate, runtime"},sidebar:"tutorialSidebar",previous:{title:"\ud83d\ude3a Substrate Kitties",permalink:"/substrate-how-to-guides/docs/tutorials/Kitties/overview"},next:{title:"Uniqueness, custom types and storage maps",permalink:"/substrate-how-to-guides/docs/tutorials/Kitties/Part 1/create-kitties"}},l=[{value:"Overview",id:"overview",children:[]},{value:"Learning outcomes",id:"learning-outcomes",children:[]},{value:"Steps",id:"steps",children:[{value:"1. Set-up your template node",id:"1-set-up-your-template-node",children:[]},{value:"2. Write out <code>pallet_kitties</code> scaffold",id:"2-write-out-pallet_kitties-scaffold",children:[]},{value:"3. Include a storage item to track all Kitties",id:"3-include-a-storage-item-to-track-all-kitties",children:[]},{value:"4. Build pallet",id:"4-build-pallet",children:[]}]},{value:"Next steps",id:"next-steps",children:[]}],d={toc:l};function c(e){var t=e.components,n=Object(i.default)(e,["components"]);return Object(r.mdx)("wrapper",Object(a.default)({},d,n,{components:t,mdxType:"MDXLayout"}),Object(r.mdx)("div",{className:"admonition admonition-note alert alert--secondary"},Object(r.mdx)("div",{parentName:"div",className:"admonition-heading"},Object(r.mdx)("h5",{parentName:"div"},Object(r.mdx)("span",{parentName:"h5",className:"admonition-icon"},Object(r.mdx)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(r.mdx)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),Object(r.mdx)("div",{parentName:"div",className:"admonition-content"},Object(r.mdx)("p",{parentName:"div"},"This tutorial assumes that you have already installed the prerequisites for building with Substrate on your machine.\nIf you haven't already, head over to our ",Object(r.mdx)("a",{parentName:"p",href:"https://substrate.dev/docs/en/knowledgebase/getting-started/"},"installation guide"),"."))),Object(r.mdx)("h2",{id:"overview"},"Overview"),Object(r.mdx)("p",null,"Before we can start making Kitties, we first need to do a little groundwork. This part covers the basic patterns involved with using the Substrate Node Template to set up a custom pallet and include a simple storage item."),Object(r.mdx)("h2",{id:"learning-outcomes"},"Learning outcomes"),Object(r.mdx)("p",null,"\u27a1\ufe0f Renaming a Substrate Node Template using the Kickstart tool."),Object(r.mdx)("p",null,"\u27a1\ufe0f Basic patterns for building and running a Substrate node."),Object(r.mdx)("p",null,"\u27a1\ufe0f Create a storage item to keep track of a single ",Object(r.mdx)("inlineCode",{parentName:"p"},"u64")," value."),Object(r.mdx)("h2",{id:"steps"},"Steps"),Object(r.mdx)("h3",{id:"1-set-up-your-template-node"},"1. Set-up your template node"),Object(r.mdx)("p",null,"The ",Object(r.mdx)("a",{parentName:"p",href:"https://github.com/substrate-developer-hub/substrate-node-template"},"Substrate Node Template"),' provides us with an "out-of-the-box" blockchain node. Our biggest advantage\nin using it are that both networking and consensus layers are already built and all we need to focus on is building out\nour ',Object(r.mdx)("a",{parentName:"p",href:"https://substrate.dev/docs/en/knowledgebase/runtime/"},"runtime")," and ",Object(r.mdx)("a",{parentName:"p",href:"https://substrate.dev/docs/en/knowledgebase/runtime/pallets"},"pallet")," logic. Before we get there, we need to set-up our project in terms of naming and dependencies."),Object(r.mdx)("p",null,"We'll use a CLI tool called ",Object(r.mdx)("a",{parentName:"p",href:"https://github.com/Keats/kickstart"},"kickstart")," to easily rename our node template."),Object(r.mdx)("p",null,"In the root directory of your local workspace, run the following command:"),Object(r.mdx)("pre",null,Object(r.mdx)("code",{parentName:"pre",className:"language-bash"},"kickstart https://github.com/sacha-l/kickstart-substrate\n")),Object(r.mdx)("p",null,"This command will clone a copy of the most recent Node Template and ask you would like to call your node and pallet. Type in:"),Object(r.mdx)("ul",null,Object(r.mdx)("li",{parentName:"ul"},Object(r.mdx)("inlineCode",{parentName:"li"},"kitties")," - as the name of our node"),Object(r.mdx)("li",{parentName:"ul"},Object(r.mdx)("inlineCode",{parentName:"li"},"mykitties")," - as the name of your pallet")),Object(r.mdx)("p",null,"This will create a directory called ",Object(r.mdx)("inlineCode",{parentName:"p"},"kitties")," with a copy of the ",Object(r.mdx)("a",{parentName:"p",href:"https://github.com/substrate-developer-hub/substrate-node-template"},"Substrate Node Template")," containing the name changes that correspond our template node, runtime and pallet."),Object(r.mdx)("p",null,"Open the ",Object(r.mdx)("inlineCode",{parentName:"p"},"kitties")," directory in your favorite code editor and rename it to ",Object(r.mdx)("inlineCode",{parentName:"p"},"kitties-tutorial"),". Renaming this directory will be helpful once you start creating other projects with the node template ","\u2014"," it'll help keep things organized! "),Object(r.mdx)("div",{className:"admonition admonition-note alert alert--secondary"},Object(r.mdx)("div",{parentName:"div",className:"admonition-heading"},Object(r.mdx)("h5",{parentName:"div"},Object(r.mdx)("span",{parentName:"h5",className:"admonition-icon"},Object(r.mdx)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(r.mdx)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"Notice the directories that the ",Object(r.mdx)("inlineCode",{parentName:"h5"},"kickstart")," command modified:")),Object(r.mdx)("div",{parentName:"div",className:"admonition-content"},Object(r.mdx)("ul",{parentName:"div"},Object(r.mdx)("li",{parentName:"ul"},Object(r.mdx)("strong",{parentName:"li"},Object(r.mdx)("inlineCode",{parentName:"strong"},"/node/"))," - This contains all the logic that allows your node to interact with your runtime and RPC clients."),Object(r.mdx)("li",{parentName:"ul"},Object(r.mdx)("strong",{parentName:"li"},Object(r.mdx)("inlineCode",{parentName:"strong"},"/pallets/"))," - Here's where all your custom pallets live."),Object(r.mdx)("li",{parentName:"ul"},Object(r.mdx)("strong",{parentName:"li"},Object(r.mdx)("inlineCode",{parentName:"strong"},"/runtime/")),' - This is where all pallets (both custom "internal" and "external" ones) are aggregated and implemented for the chain\'s runtime.')))),Object(r.mdx)("p",null,"By default, you'll notice that the instance of our modified template pallet name remains ",Object(r.mdx)("inlineCode",{parentName:"p"},"TemplateModule"),". Change it to\n",Object(r.mdx)("inlineCode",{parentName:"p"},"SubstrateKitties")," (in ",Object(r.mdx)("inlineCode",{parentName:"p"},"runtime/src/lib.rs"),"):"),Object(r.mdx)("pre",null,Object(r.mdx)("code",{parentName:"pre",className:"language-rust"},"construct_runtime!(\n    pub enum Runtime where\n    Block = Block,\n    NodeBlock = opaque::Block,\n    UncheckedExtrinsic = UncheckedExtrinsic\n    {\n        // --snip\n        SubstrateKitties: pallet_mykitties::{Pallet, Call, Storage, Event<T>},\n    }\n);\n")),Object(r.mdx)("p",null,"We can already build the node as is by navigating to directory ",Object(r.mdx)("inlineCode",{parentName:"p"},"kitties")," in terminal and running this command:"),Object(r.mdx)("pre",null,Object(r.mdx)("code",{parentName:"pre",className:"language-bash"},"cargo +nightly build --release\n")),Object(r.mdx)("p",null,"It's normal if this command takes a little while depending on your machine ","\u2014"," it's building\na whole bunch of crates from the Substrate crates and libraries. The nice thing is that once we run this command the first time, it\nwon't need to rebuild all the crates when we build subsequent times."),Object(r.mdx)("p",null,"Assuming that your node builds successfully, launch it in development mode to make sure it works:"),Object(r.mdx)("pre",null,Object(r.mdx)("code",{parentName:"pre",className:"language-bash"},"./target/release/node-kitties --tmp --dev\n")),Object(r.mdx)("p",null,"You should see blocks being created in your terminal. The ",Object(r.mdx)("inlineCode",{parentName:"p"},"--tmp")," and ",Object(r.mdx)("inlineCode",{parentName:"p"},"--dev")," flags mean we're running a temporary node in development mode. "),Object(r.mdx)("h3",{id:"2-write-out-pallet_kitties-scaffold"},"2. Write out ",Object(r.mdx)("inlineCode",{parentName:"h3"},"pallet_kitties")," scaffold"),Object(r.mdx)("p",null,"We'll be spending most of this tutorial in the ",Object(r.mdx)("inlineCode",{parentName:"p"},"pallets")," directory of our template node.\nLet's take a glance at the folder structure in our workspace:"),Object(r.mdx)("pre",null,Object(r.mdx)("code",{parentName:"pre",className:"language-bash"},"kitties-tutorial           <--  The name of our project directory\n|\n+-- node\n|\n+-- pallets\n|   |\n|   +-- mykitties           \n|       |\n|       +-- Cargo.toml     \n|       |\n|       +-- src\n|           |\n|           +-- lib.rs     <-- Remove contents\n|           |\n|           +-- mock.rs    <-- Remove file\n|           |\n|           +-- tests.rs   <-- Remove file\n|\n+-- Cargo.toml              \n")),Object(r.mdx)("blockquote",null,Object(r.mdx)("p",{parentName:"blockquote"},"You can go ahead and remove ",Object(r.mdx)("inlineCode",{parentName:"p"},"mock.rs")," and ",Object(r.mdx)("inlineCode",{parentName:"p"},"tests.rs"),". ",Object(r.mdx)("strong",{parentName:"p"},"We won't be learning about\nusing these in this tutorial. Have a look at ",Object(r.mdx)("a",{parentName:"strong",href:"/docs/testing/test-transfer"},"this how-to guide")," if\nyou're curious to learn how testing works."))),Object(r.mdx)("p",null,Object(r.mdx)("a",{parentName:"p",href:"https://substrate.dev/docs/en/knowledgebase/runtime/pallets"},"Pallets")," in Substrate are used to define runtime logic. In our case, we'll be creating a single pallet that manages all of the\nlogic of our Substrate Kitties application."),Object(r.mdx)("p",null,"Let's lay out the basic structure of our pallet by outlining the parts inside the ",Object(r.mdx)("inlineCode",{parentName:"p"},"pallets/mykitties/src/lib.rs"),". "),Object(r.mdx)("div",{className:"admonition admonition-note alert alert--secondary"},Object(r.mdx)("div",{parentName:"div",className:"admonition-heading"},Object(r.mdx)("h5",{parentName:"div"},Object(r.mdx)("span",{parentName:"h5",className:"admonition-icon"},Object(r.mdx)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(r.mdx)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),Object(r.mdx)("div",{parentName:"div",className:"admonition-content"},Object(r.mdx)("p",{parentName:"div"},"Our pallet's directory ",Object(r.mdx)("inlineCode",{parentName:"p"},"pallets/mykitties/")," is not the same as our pallet's name. The name of our pallet as Cargo understands it is ",Object(r.mdx)("inlineCode",{parentName:"p"},"pallet-mykitties"),"."))),Object(r.mdx)("p",null,"Every FRAME pallet has:"),Object(r.mdx)("ul",null,Object(r.mdx)("li",{parentName:"ul"},"A set of ",Object(r.mdx)("inlineCode",{parentName:"li"},"frame_support")," and ",Object(r.mdx)("inlineCode",{parentName:"li"},"frame_system")," dependencies."),Object(r.mdx)("li",{parentName:"ul"},"Required ",Object(r.mdx)("a",{parentName:"li",href:"https://substrate.dev/docs/en/knowledgebase/runtime/macros#frame-v2-macros-and-attributes"},"attribute macros")," (i.e. configuration traits, storage items and function calls).")),Object(r.mdx)("div",{className:"admonition admonition-note alert alert--secondary"},Object(r.mdx)("div",{parentName:"div",className:"admonition-heading"},Object(r.mdx)("h5",{parentName:"div"},Object(r.mdx)("span",{parentName:"h5",className:"admonition-icon"},Object(r.mdx)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(r.mdx)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),Object(r.mdx)("div",{parentName:"div",className:"admonition-content"},Object(r.mdx)("p",{parentName:"div"},"We'll be updating additional dependencies as we progress through the next parts of this tutorial."))),Object(r.mdx)("p",null,'Here\'s the most bare-bones version of the Kitties pallet we will be building in this tutorial. It contains the starting point for\nadding code for the next sections of this tutorial, with comments marked with "TODO" to indicate code we will be writing later, and\n"ACTION" to indicate code that will be written in the current part of the tutorial.'),Object(r.mdx)("p",null,"Paste the following code in ",Object(r.mdx)("inlineCode",{parentName:"p"},"/pallets/mykitties/src/lib.rs"),": "),Object(r.mdx)("pre",null,Object(r.mdx)("code",{parentName:"pre",className:"language-rust"},'#![cfg_attr(not(feature = "std"), no_std)]\n\npub use pallet::*;\n\n#[frame_support::pallet]\npub mod pallet {\n    use frame_support::{sp_runtime::traits::{Hash, Zero},\n                        dispatch::{DispatchResultWithPostInfo, DispatchResult}, \n                        traits::{Currency, ExistenceRequirement, Randomness},\n                        pallet_prelude::*};\n    use frame_system::pallet_prelude::*;\n    use sp_core::H256;\n\n    // TODO Part II: Struct for holding Kitty information.\n\n    // TODO Part II: Enum and implementation to handle Gender type in Kitty struct.\n\n    #[pallet::pallet]\n    #[pallet::generate_store(trait Store)]\n    pub struct Pallet<T>(_);\n\n    /// Configure the pallet by specifying the parameters and types it depends on.\n    #[pallet::config]\n    pub trait Config: pallet_balances::Config + frame_system::Config {\n        /// Because this pallet emits events, it depends on the runtime\'s definition of an event.\n        type Event: From<Event<Self>> + IsType<<Self as frame_system::Config>::Event>;\n\n        /// The Currency handler for the Kitties pallet.\n        type Currency: Currency<Self::AccountId>;\n        \n        // TODO Part II: Specify the custom types for our runtime.\n\n    }\n\n    // Errors.\n    #[pallet::error]\n    pub enum Error<T> {\n        // TODO Part III\n    }\n\n    #[pallet::event]\n    #[pallet::metadata(T::AccountId = "AccountId")]\n    #[pallet::generate_deposit(pub(super) fn deposit_event)]\n    pub enum Event<T: Config> {\n        // TODO Part III\n    }\n\n    // ACTION: Storage item to keep a count of all existing Kitties.\n\n    // TODO Part II: Remaining storage items.\n\n    // TODO Part III: Our pallet\'s genesis configuration.\n\n    #[pallet::call]\n    impl<T: Config> Pallet<T> {\n        \n        // TODO Part III: create_kitty\n        \n        // TODO Part III: set_price\n        \n        // TODO Part III: transfer\n\n        // TODO Part III: buy_kitty\n        \n        // TODO Part III: breed_kitty\n    }\n\n    // TODO Parts II: helper function for Kitty struct\n\n    impl<T: Config> Pallet<T> {\n        // TODO Part III: helper functions for dispatchable functions\n        \n        // TODO: increment_nonce, random_hash, mint, transfer_from\n        \n    }\n}\n')),Object(r.mdx)("p",null,"Now try running the following command to rebuild your chain:"),Object(r.mdx)("pre",null,Object(r.mdx)("code",{parentName:"pre",className:"language-bash"},"cargo +nightly build --release\n")),Object(r.mdx)("p",null,"Get an error about dependencies? That's normal! Our pallet is using ",Object(r.mdx)("inlineCode",{parentName:"p"},"sp-io")," which isn't part of the node template so we must specify it ourselves. In ",Object(r.mdx)("inlineCode",{parentName:"p"},"pallets/mykitties/Cargo.toml"),",\nadd the following:"),Object(r.mdx)("pre",null,Object(r.mdx)("code",{parentName:"pre",className:"language-TOML"},"[dependencies.sp-io]\ndefault-features = false\ngit = 'https://github.com/paritytech/substrate.git'\ntag = 'monthly-2021-08'\nversion = '4.0.0-dev'\n")),Object(r.mdx)("div",{className:"admonition admonition-warning alert alert--danger"},Object(r.mdx)("div",{parentName:"div",className:"admonition-heading"},Object(r.mdx)("h5",{parentName:"div"},Object(r.mdx)("span",{parentName:"h5",className:"admonition-icon"},Object(r.mdx)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},Object(r.mdx)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"warning")),Object(r.mdx)("div",{parentName:"div",className:"admonition-content"},Object(r.mdx)("p",{parentName:"div"},"Check that you're using the correct ",Object(r.mdx)("inlineCode",{parentName:"p"},"monthly-*")," tag and version otherwise you will get a dependency error.\nHere, we're using the most up-to-date tag as of the writing of this tutorial."))),Object(r.mdx)("p",null,"Now run ",Object(r.mdx)("inlineCode",{parentName:"p"},"cargo +nightly build --release")," again to make sure it builds without errors."),Object(r.mdx)("div",{className:"admonition admonition-note alert alert--secondary"},Object(r.mdx)("div",{parentName:"div",className:"admonition-heading"},Object(r.mdx)("h5",{parentName:"div"},Object(r.mdx)("span",{parentName:"h5",className:"admonition-icon"},Object(r.mdx)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(r.mdx)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),Object(r.mdx)("div",{parentName:"div",className:"admonition-content"},Object(r.mdx)("p",{parentName:"div"},"You'll notice the Rust compiler giving you warnings about unused imports. That's fine! Just ignore them ","\u2014"," we're going to\nbe using those imports in the later parts of the tutorial."))),Object(r.mdx)("p",null,"In the next step we will include the first storage item our Kitty application will require."),Object(r.mdx)("h3",{id:"3-include-a-storage-item-to-track-all-kitties"},"3. Include a storage item to track all Kitties"),Object(r.mdx)("p",null,"Let's start by adding the most simple logic we can to our runtime: a function which stores a variable in runtime."),Object(r.mdx)("p",null,"To do this we'll use ",Object(r.mdx)("a",{parentName:"p",href:"https://substrate.dev/rustdocs/v3.0.0/frame_support/storage/trait.StorageValue.html"},Object(r.mdx)("inlineCode",{parentName:"a"},"StorageValue"))," from Substrate's ",Object(r.mdx)("a",{parentName:"p",href:"https://substrate.dev/rustdocs/v3.0.0/frame_support/storage/index.html"},"storage API")," which is a trait that depends\non the ",Object(r.mdx)("a",{parentName:"p",href:"https://substrate.dev/docs/en/knowledgebase/runtime/macros#palletstorage"},"storage macro"),"."),Object(r.mdx)("p",null,"All that means for our purposes is that for any storage item we want to declare, we must include the ",Object(r.mdx)("inlineCode",{parentName:"p"},"#[pallet::storage]"),"  macro beforehand. Learn more about declaring storage items ",Object(r.mdx)("a",{parentName:"p",href:"https://substrate.dev/docs/en/knowledgebase/runtime/storage#declaring-storage-items"},"here"),". "),Object(r.mdx)("p",null,"In ",Object(r.mdx)("inlineCode",{parentName:"p"},"mykitties/src/lib.rs"),", replace the ACTION line with: "),Object(r.mdx)("pre",null,Object(r.mdx)("code",{parentName:"pre",className:"language-rust"},"  #[pallet::storage]\n    #[pallet::getter(fn kitty_cnt)]\n    /// Keeps track of the number of Kitties in existence.\n    pub(super) type KittyCnt<T: Config> = StorageValue<_, u64, ValueQuery>;\n")),Object(r.mdx)("p",null,"This creates a storage item for our pallet to keep track of the total count of Kitties\nin existence."),Object(r.mdx)("h3",{id:"4-build-pallet"},"4. Build pallet"),Object(r.mdx)("p",null,"From the previous step, your pallet should contain a storage item called ",Object(r.mdx)("inlineCode",{parentName:"p"},"KittyCnt")," which keeps track of a\nsingle ",Object(r.mdx)("inlineCode",{parentName:"p"},"u64")," value. As part of the basic setup, we're doing great!"),Object(r.mdx)("div",{className:"admonition admonition-info alert alert--info"},Object(r.mdx)("div",{parentName:"div",className:"admonition-heading"},Object(r.mdx)("h5",{parentName:"div"},Object(r.mdx)("span",{parentName:"h5",className:"admonition-icon"},Object(r.mdx)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(r.mdx)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),Object(r.mdx)("div",{parentName:"div",className:"admonition-content"},Object(r.mdx)("p",{parentName:"div"},"As mentioned in the ",Object(r.mdx)("a",{parentName:"p",href:"./overview"},"overview of this tutorial series"),",\nyou'll be implementing 3 storage items in total which you'll discover as you\nwrite out your pallet's logic in the next parts."))),Object(r.mdx)("p",null,"Before we move on, let's make sure everything compiles. We don't need to rebuild our entire node each time we update our pallet.\nInstead, we can use a command that only builds our pallet. From inside your pallet directory, run the following:"),Object(r.mdx)("pre",null,Object(r.mdx)("code",{parentName:"pre",className:"language-bash"},"cargo build -p pallet-mykitties\n")),Object(r.mdx)("p",null,"Does your pallet compile without error? Well done if it does! If not, go back and check that all the macros are in place and that\nyou've included the FRAME dependencies."),Object(r.mdx)("div",{className:"admonition admonition-note alert alert--secondary"},Object(r.mdx)("div",{parentName:"div",className:"admonition-heading"},Object(r.mdx)("h5",{parentName:"div"},Object(r.mdx)("span",{parentName:"h5",className:"admonition-icon"},Object(r.mdx)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(r.mdx)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"Congratulations!")),Object(r.mdx)("div",{parentName:"div",className:"admonition-content"},Object(r.mdx)("p",{parentName:"div"},"You've completed the first part of this series. At this stage, you've learnt the various patterns for:"),Object(r.mdx)("ul",{parentName:"div"},Object(r.mdx)("li",{parentName:"ul"},"Customizing the Substrate node template and including a custom pallet."),Object(r.mdx)("li",{parentName:"ul"},"Building a Substrate chain and checking that a target pallet compiles."),Object(r.mdx)("li",{parentName:"ul"},"Declaring a single value ",Object(r.mdx)("inlineCode",{parentName:"li"},"u64")," storage item.")))),Object(r.mdx)("h2",{id:"next-steps"},"Next steps"),Object(r.mdx)("ul",null,Object(r.mdx)("li",{parentName:"ul"},"Writing a struct in a ",Object(r.mdx)("inlineCode",{parentName:"li"},"StorageMap")," to store details about our Kitties"),Object(r.mdx)("li",{parentName:"ul"},"Using the Randomness trait to create unique Kitties"),Object(r.mdx)("li",{parentName:"ul"},"Creating our pallet's remaining storage items")))}c.isMDXComponent=!0}}]);