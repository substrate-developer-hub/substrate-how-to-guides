(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{188:function(e,t,n){"use strict";n.r(t),n.d(t,"MDXContext",(function(){return p})),n.d(t,"MDXProvider",(function(){return u})),n.d(t,"mdx",(function(){return O})),n.d(t,"useMDXComponents",(function(){return d})),n.d(t,"withMDXComponents",(function(){return m}));var a=n(0),r=n.n(a);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(){return(i=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=r.a.createContext({}),m=function(e){return function(t){var n=d(t.components);return r.a.createElement(e,i({},t,{components:n}))}},d=function(e){var t=r.a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=d(e.components);return r.a.createElement(p.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},h=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,i=e.parentName,o=c(e,["components","mdxType","originalType","parentName"]),p=d(n),m=a,u=p["".concat(i,".").concat(m)]||p[m]||b[m]||l;return n?r.a.createElement(u,s(s({ref:t},o),{},{components:n})):r.a.createElement(u,s({ref:t},o))}));function O(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,i=new Array(l);i[0]=h;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:a,i[1]=o;for(var c=2;c<l;c++)i[c]=n[c];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,n)}h.displayName="MDXCreateElement"},61:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return o})),n.d(t,"toc",(function(){return s})),n.d(t,"default",(function(){return p}));var a=n(3),r=n(8),l=(n(0),n(188)),i={sidebar_position:1,keywords:"basics, beginner, runtime"},o={unversionedId:"basics/basic-pallet-integration",id:"basics/basic-pallet-integration",isDocsHomePage:!1,title:"Basic pallet integration",description:"A fundamental pattern that all runtime engineers should internalize over time.",source:"@site/docs/01-basics/basic-pallet-integration.md",sourceDirName:"01-basics",slug:"/basics/basic-pallet-integration",permalink:"/substrate-how-to-guides/docs/basics/basic-pallet-integration",editUrl:"https://github.com/substrate-developer-hub/substrate-how-to-guides/edit/main/docs/01-basics/basic-pallet-integration.md",version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,keywords:"basics, beginner, runtime"},sidebar:"tutorialSidebar",previous:{title:"Welcome",permalink:"/substrate-how-to-guides/docs/intro"},next:{title:"Primitive token mint",permalink:"/substrate-how-to-guides/docs/basics/mint-token"}},s=[{value:"Goal",id:"goal",children:[]},{value:"Use cases",id:"use-cases",children:[]},{value:"Overview",id:"overview",children:[]},{value:"Steps",id:"steps",children:[{value:"1. Import your pallet",id:"1-import-your-pallet",children:[]},{value:"2. Include it in <code>/runtime/src/lib.rs</code>",id:"2-include-it-in-runtimesrclibrs",children:[]},{value:"3. Update <code>/runtime/Cargo.toml</code>",id:"3-update-runtimecargotoml",children:[]}]},{value:"Examples",id:"examples",children:[]},{value:"Related material",id:"related-material",children:[]}],c={toc:s};function p(e){var t=e.components,n=Object(r.default)(e,["components"]);return Object(l.mdx)("wrapper",Object(a.default)({},c,n,{components:t,mdxType:"MDXLayout"}),Object(l.mdx)("p",null,Object(l.mdx)("em",{parentName:"p"},"A fundamental pattern that all runtime engineers should internalize over time.")),Object(l.mdx)("p",null,Object(l.mdx)("a",{parentName:"p",href:"https://playground.substrate.dev/?deploy=node-template"},Object(l.mdx)("img",{parentName:"a",src:"https://img.shields.io/badge/Playground-Node_Template-brightgreen?logo=Parity%20Substrate",alt:"Try on playground"}))),Object(l.mdx)("h2",{id:"goal"},"Goal"),Object(l.mdx)("p",null,"Learn the steps for integrating a pallet to your runtime."),Object(l.mdx)("h2",{id:"use-cases"},"Use cases"),Object(l.mdx)("ul",null,Object(l.mdx)("li",{parentName:"ul"},"Including a custom pallet that implements an event and a call for runtime."),Object(l.mdx)("li",{parentName:"ul"},"Including a pallet from Crates.io to a runtime.")),Object(l.mdx)("h2",{id:"overview"},"Overview"),Object(l.mdx)("p",null,"This guide is an extension to the ",Object(l.mdx)("a",{parentName:"p",href:"https://substrate.dev/docs/en/tutorials/add-a-pallet/import-a-pallet"},'"Add a Pallet to Your Runtime" tutorial'),", intended as a resource\nfor developers new to Substrate looking to quickly integrate a pallet to their runtime. It covers adding both local and external pallets to a runtime."),Object(l.mdx)("h2",{id:"steps"},"Steps"),Object(l.mdx)("h3",{id:"1-import-your-pallet"},"1. Import your pallet"),Object(l.mdx)("h4",{id:"for-local-pallets"},"For local pallets"),Object(l.mdx)("p",null,"Assuming a pallet called ",Object(l.mdx)("inlineCode",{parentName:"p"},"pallet_something")," is created, the first step is to import it in ",Object(l.mdx)("inlineCode",{parentName:"p"},"/runtime/src/lib.rs"),":"),Object(l.mdx)("pre",null,Object(l.mdx)("code",{parentName:"pre",className:"language-rust"},"// Import your pallet.\npub use pallet_something;\n")),Object(l.mdx)("h3",{id:"2-include-it-in-runtimesrclibrs"},"2. Include it in ",Object(l.mdx)("inlineCode",{parentName:"h3"},"/runtime/src/lib.rs")),Object(l.mdx)("h4",{id:"for-local-pallets-1"},"For local pallets"),Object(l.mdx)("p",null,"Configure your pallet's runtime implementation. Assuming the local pallet only has ",Object(l.mdx)("inlineCode",{parentName:"p"},"Event")," and ",Object(l.mdx)("inlineCode",{parentName:"p"},"Call")," types exposed to the runtime:"),Object(l.mdx)("pre",null,Object(l.mdx)("code",{parentName:"pre",className:"language-rust"},"// Configure your pallet.\nimpl pallet_something::Config for Runtime {\n    type Event = Event;\n    type Call = Call;\n}\n")),Object(l.mdx)("p",null,"Then, declare your pallet and the items it exposes in ",Object(l.mdx)("inlineCode",{parentName:"p"},"construct_runtime!"),", including the additional ",Object(l.mdx)("inlineCode",{parentName:"p"},"Module")," and ",Object(l.mdx)("inlineCode",{parentName:"p"},"Storage"),"\ntypes for the runtime macro:"),Object(l.mdx)("pre",null,Object(l.mdx)("code",{parentName:"pre",className:"language-rust"},"construct_runtime!(\n    pub enum Runtime where\n        Block = Block,\n        NodeBlock = opaque::Block,\n        UncheckedExtrinsic = UncheckedExtrinsic\n    {\n/* --snip-- */\n        Something: pallet_something::{Module, Call, Storage, Event<T>},\n/* --snip-- */\n    }\n);\n")),Object(l.mdx)("h4",{id:"for-external-pallets"},"For external pallets"),Object(l.mdx)("p",null,"The same pattern applies as for declaring a local pallet, except you must ensure you include all the types your pallet exposes.\nIn addition, don't forget to include relevant parameter types and constants if relevant. See this examples on how ",Object(l.mdx)("a",{parentName:"p",href:"https://github.com/paritytech/substrate/blob/master/bin/node/runtime/src/lib.rs#L413-L422"},Object(l.mdx)("inlineCode",{parentName:"a"},"pallet_timestamp")),"\nis declared."),Object(l.mdx)("h3",{id:"3-update-runtimecargotoml"},"3. Update ",Object(l.mdx)("inlineCode",{parentName:"h3"},"/runtime/Cargo.toml")),Object(l.mdx)("h4",{id:"for-local-pallets-2"},"For local pallets"),Object(l.mdx)("p",null,"In ",Object(l.mdx)("inlineCode",{parentName:"p"},"/runtime/Cargo.toml"),", include your pallet as a local dependency, include it in ",Object(l.mdx)("inlineCode",{parentName:"p"},"std")," and add ",Object(l.mdx)("inlineCode",{parentName:"p"},"runtime-benchmarks"),":"),Object(l.mdx)("pre",null,Object(l.mdx)("code",{parentName:"pre",className:"language-rust"},"/* --snip-- */\n[dependencies.pallet-something]\ndefault-features = false\npath = '../pallets/something'\nversion = '3.0.0'\n/* --snip-- */\n[features]\ndefault = ['std']\nruntime-benchmarks = [\n    /* --snip */\n    'pallet-something/runtime-benchmarks',\n]\nstd = [\n    'pallet-something/std',\n/* --snip-- */\n]\n")),Object(l.mdx)("h4",{id:"for-external-pallets-1"},"For external pallets"),Object(l.mdx)("p",null,"Assuming the pallet is hosted in ",Object(l.mdx)("a",{parentName:"p",href:"https://crates.parity.io/sc_service/index.html"},"parity.crates.io"),", adding it to the runtime would look like this:"),Object(l.mdx)("pre",null,Object(l.mdx)("code",{parentName:"pre",className:"language-rust"},"[dependencies.pallet-external]\ndefault-features = false\ngit = 'https://github.com/paritytech/substrate.git'\nrev = 'd6c33e7ec313f9bd5e319dc0a5a3ace5543f9617'\nversion = '3.0.0'\n/* --snip-- */\nruntime-benchmarks = [\n    /* --snip */\n    'pallet-external/runtime-benchmarks',\n]\nstd = [\n'pallet-external/std',\n/* --snip-- */\n]\n")),Object(l.mdx)("h2",{id:"examples"},"Examples"),Object(l.mdx)("ul",null,Object(l.mdx)("li",{parentName:"ul"},Object(l.mdx)("a",{parentName:"li",href:"https://github.com/substrate-developer-hub/substrate-node-template/blob/master/pallets/template/src/lib.rs#L1-L107"},"Template pallet")),Object(l.mdx)("li",{parentName:"ul"},Object(l.mdx)("a",{parentName:"li",href:"https://github.com/substrate-developer-hub/substrate-node-template"},"Substrate node template")),Object(l.mdx)("li",{parentName:"ul"},Object(l.mdx)("a",{parentName:"li",href:"https://github.com/paritytech/substrate/blob/master/bin/node/runtime/src/lib.rs#L413-L422"},"Timestamp pallet in bin"))),Object(l.mdx)("h2",{id:"related-material"},"Related material"),Object(l.mdx)("ul",null,Object(l.mdx)("li",{parentName:"ul"},Object(l.mdx)("a",{parentName:"li",href:"https://substrate.dev/docs/en/knowledgebase/runtime/tests#mock-runtime-environment"},"Mock runtime")),Object(l.mdx)("li",{parentName:"ul"},Object(l.mdx)("a",{parentName:"li",href:"https://crates.io/crates/pallet-timestamp"},"FRAME Timestamp Pallet")," in Crates.io"),Object(l.mdx)("li",{parentName:"ul"},Object(l.mdx)("a",{parentName:"li",href:"https://substrate.dev/rustdocs/latest/pallet_timestamp/pallet/trait.Config.html#associated-types"},"Timestamp Pallet associated types"))))}p.isMDXComponent=!0}}]);