(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{188:function(e,t,n){"use strict";n.r(t),n.d(t,"MDXContext",(function(){return d})),n.d(t,"MDXProvider",(function(){return p})),n.d(t,"mdx",(function(){return g})),n.d(t,"useMDXComponents",(function(){return u})),n.d(t,"withMDXComponents",(function(){return l}));var a=n(0),i=n.n(a);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(){return(o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function m(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var d=i.a.createContext({}),l=function(e){return function(t){var n=u(t.components);return i.a.createElement(e,o({},t,{components:n}))}},u=function(e){var t=i.a.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):m(m({},t),e)),n},p=function(e){var t=u(e.components);return i.a.createElement(d.Provider,{value:t},e.children)},h={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},b=i.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,o=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=u(n),l=a,p=d["".concat(o,".").concat(l)]||d[l]||h[l]||r;return n?i.a.createElement(p,m(m({ref:t},c),{},{components:n})):i.a.createElement(p,m({ref:t},c))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,o=new Array(r);o[0]=b;var c={};for(var m in t)hasOwnProperty.call(t,m)&&(c[m]=t[m]);c.originalType=e,c.mdxType="string"==typeof e?e:a,o[1]=c;for(var s=2;s<r;s++)o[s]=n[s];return i.a.createElement.apply(null,o)}return i.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"},53:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return c})),n.d(t,"toc",(function(){return m})),n.d(t,"default",(function(){return d}));var a=n(3),i=n(8),r=(n(0),n(188)),o={sidebar_position:2,keywords:"parachains"},c={unversionedId:"parachains/b-runtime-upgrades/setup-runtime-and-client",id:"parachains/b-runtime-upgrades/setup-runtime-and-client",isDocsHomePage:!1,title:"Set-up your runtime and client",description:"A series of steps you're going to want to take before deploying your runtime as a parachain.",source:"@site/docs/07-parachains/b-runtime-upgrades/setup-runtime-and-client.md",sourceDirName:"07-parachains/b-runtime-upgrades",slug:"/parachains/b-runtime-upgrades/setup-runtime-and-client",permalink:"/substrate-how-to-guides/docs/parachains/b-runtime-upgrades/setup-runtime-and-client",editUrl:"https://github.com/substrate-developer-hub/substrate-how-to-guides/edit/main/docs/07-parachains/b-runtime-upgrades/setup-runtime-and-client.md",version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,keywords:"parachains"},sidebar:"tutorialSidebar",previous:{title:"Preparing for On-Chain Upgrades",permalink:"/substrate-how-to-guides/docs/parachains/b-runtime-upgrades/runtime-upgrades"},next:{title:"How to use the scheduler pallet for storage migrations",permalink:"/substrate-how-to-guides/docs/parachains/b-runtime-upgrades/upgrade-scheduler"}},m=[{value:"Goal",id:"goal",children:[]},{value:"Use cases",id:"use-cases",children:[]},{value:"Overview",id:"overview",children:[]},{value:"Steps",id:"steps",children:[{value:"1. Set a unique ProtocolID",id:"1-set-a-unique-protocolid",children:[]},{value:"2. Check runtime weights",id:"2-check-runtime-weights",children:[]},{value:"3. Runtime deployment",id:"3-runtime-deployment",children:[]}]},{value:"Examples",id:"examples",children:[]},{value:"Resources",id:"resources",children:[]}],s={toc:m};function d(e){var t=e.components,n=Object(i.default)(e,["components"]);return Object(r.mdx)("wrapper",Object(a.default)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(r.mdx)("p",null,Object(r.mdx)("em",{parentName:"p"},"A series of steps you're going to want to take before deploying your runtime as a parachain.")),Object(r.mdx)("h2",{id:"goal"},"Goal"),Object(r.mdx)("ul",null,Object(r.mdx)("li",{parentName:"ul"},"Ensure runtime weights are corret."),Object(r.mdx)("li",{parentName:"ul"},"Correctly deploy a runtime.")),Object(r.mdx)("h2",{id:"use-cases"},"Use cases"),Object(r.mdx)("p",null,"Launching a parachain."),Object(r.mdx)("h2",{id:"overview"},"Overview"),Object(r.mdx)("p",null,"When launching a parachain, it is important to make sure a chain's runtime is properly setup. This includes benchmarking prior to storage migrations, checking that weights are correctly implemented and making sure the ProtocolID IS unique."),Object(r.mdx)("h2",{id:"steps"},"Steps"),Object(r.mdx)("h3",{id:"1-set-a-unique-protocolid"},"1. Set a unique ProtocolID"),Object(r.mdx)("p",null,"In order to set a unique ProtocolID, change make sure you use some nonce or salt value. This is set in\n",Object(r.mdx)("inlineCode",{parentName:"p"},"/client/network/src/config"),":"),Object(r.mdx)("pre",null,Object(r.mdx)("code",{parentName:"pre",className:"language-rust"},"#[derive(Clone, PartialEq, Eq, Hash)]\npub struct ProtocolId(smallvec::SmallVec<[u8; 6]>);\n\nimpl<'a> From<&'a str> for ProtocolId {\n    fn from(bytes: &'a str) -> ProtocolId {\n        ProtocolId(bytes.as_bytes().into())\n    }\n}\n")),Object(r.mdx)("p",null,"This step is important ","\u2014"," you wouldn't want to connect to the wrong network!"),Object(r.mdx)("div",{className:"admonition admonition-tip alert alert--success"},Object(r.mdx)("div",{parentName:"div",className:"admonition-heading"},Object(r.mdx)("h5",{parentName:"div"},Object(r.mdx)("span",{parentName:"h5",className:"admonition-icon"},Object(r.mdx)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},Object(r.mdx)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),Object(r.mdx)("div",{parentName:"div",className:"admonition-content"},Object(r.mdx)("p",{parentName:"div"},"Refer to ",Object(r.mdx)("a",{parentName:"p",href:"/docs/pallet-design/randomness"},"this guide")," for some ideas on creating a unique value to use here."))),Object(r.mdx)("div",{className:"admonition admonition-note alert alert--secondary"},Object(r.mdx)("div",{parentName:"div",className:"admonition-heading"},Object(r.mdx)("h5",{parentName:"div"},Object(r.mdx)("span",{parentName:"h5",className:"admonition-icon"},Object(r.mdx)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(r.mdx)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"Memory Profiling")),Object(r.mdx)("div",{parentName:"div",className:"admonition-content"},Object(r.mdx)("p",{parentName:"div"},Object(r.mdx)("a",{parentName:"p",href:"https://substrate.dev/docs/en/knowledgebase/integrate/memory-profiling"},"Profiling your collator")," should be done to analyze memory leaks,\nidentify where memory consumption is happening, define temporary\nallocations, and investigate excessive memory fragmentation within\napplications."))),Object(r.mdx)("h3",{id:"2-check-runtime-weights"},"2. Check runtime weights"),Object(r.mdx)("p",null,"Use benchmarking to verify that your runtime weights are correct."),Object(r.mdx)("div",{className:"admonition admonition-note alert alert--secondary"},Object(r.mdx)("div",{parentName:"div",className:"admonition-heading"},Object(r.mdx)("h5",{parentName:"div"},Object(r.mdx)("span",{parentName:"h5",className:"admonition-icon"},Object(r.mdx)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(r.mdx)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),Object(r.mdx)("div",{parentName:"div",className:"admonition-content"},Object(r.mdx)("p",{parentName:"div"},"Refer to this ",Object(r.mdx)("a",{parentName:"p",href:"https://substrate.dev/docs/en/knowledgebase/runtime/benchmarking"},"knowledgebase article")," on\nbenchmarking for additional information."))),Object(r.mdx)("h4",{id:"customize-weights"},"Customize weights"),Object(r.mdx)("p",null,"Make sure that each pallet in your runtime employs the correct weighting system. Default Substrate weight ",Object(r.mdx)("strong",{parentName:"p"},"are not")," to be used in production, as a general rule."),Object(r.mdx)("h4",{id:"set-block-weight-limit"},"Set block weight limit"),Object(r.mdx)("p",null,"It is recommended to have a block weight limit (block production time) of 0,5 seconds in the beginning due to uncertainties in block execution time. As the execution time of the network stabilizes the weight limit can be increased to 2 seconds."),Object(r.mdx)("h3",{id:"3-runtime-deployment"},"3. Runtime deployment"),Object(r.mdx)("h4",{id:"minimize-the-size-of-your-runtime"},"Minimize the size of your runtime"),Object(r.mdx)("p",null,"Generally, when launching a parachain, it is important to use the ",Object(r.mdx)("strong",{parentName:"p"},"compressed version of the runtime")," to lower the amount of data being transferred."),Object(r.mdx)("ul",null,Object(r.mdx)("li",{parentName:"ul"},Object(r.mdx)("p",{parentName:"li"},"It is recommended to launch a parachain with limited functionality and gradually increase it with runtime upgrades. The reason behind that is that during a runtime upgrade both the previous runtime and the new runtime are included in the PoVBlock and therefore if the changes are large enough the block might be rejected by the Relay Chain due to PoVBlock size limits.")),Object(r.mdx)("li",{parentName:"ul"},Object(r.mdx)("p",{parentName:"li"},"If the runtime is included in the state proof, ensure the PoV block (i.e. the set of extrinsics, including the new runtime, the PoV state proof, potentially the old runtime) fits within the PoVBlock size limit. If the runtime is not included in the state proof, the size limit of the new runtime will be much higher."))),Object(r.mdx)("div",{className:"admonition admonition-tip alert alert--success"},Object(r.mdx)("div",{parentName:"div",className:"admonition-heading"},Object(r.mdx)("h5",{parentName:"div"},Object(r.mdx)("span",{parentName:"h5",className:"admonition-icon"},Object(r.mdx)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},Object(r.mdx)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),Object(r.mdx)("div",{parentName:"div",className:"admonition-content"},Object(r.mdx)("p",{parentName:"div"},"You can check the maximum PoVBlock size ",Object(r.mdx)("a",{parentName:"p",href:"https://github.com/paritytech/polkadot/blob/a620156c0cdb46991b8eae89b99d1941aa8d9e18/primitives/src/v1/mod.rs#L206"},"here")," or in the Polkadot-JS Apps UI: ",Object(r.mdx)("em",{parentName:"p"},"Developers")," -> ",Object(r.mdx)("em",{parentName:"p"},"ParachainsConfiguration")," -> ",Object(r.mdx)("em",{parentName:"p"},"ActiveConfiguration"),")"))),Object(r.mdx)("div",{className:"admonition admonition-info alert alert--info"},Object(r.mdx)("div",{parentName:"div",className:"admonition-heading"},Object(r.mdx)("h5",{parentName:"div"},Object(r.mdx)("span",{parentName:"h5",className:"admonition-icon"},Object(r.mdx)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(r.mdx)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),Object(r.mdx)("div",{parentName:"div",className:"admonition-content"},Object(r.mdx)("p",{parentName:"div"},"Here you can see an example of how to ",Object(r.mdx)("a",{parentName:"p",href:"https://github.com/paritytech/cumulus/blob/59cdbb6a56b1c49009413d66ba2232494563b57c/polkadot-parachains/statemine/src/lib.rs#L148"},"limit")," and ",Object(r.mdx)("a",{parentName:"p",href:"https://github.com/paritytech/cumulus/pull/476/files#diff-09b95657e9aa1b646722afa7944a00ddc2541e8753254a86180b338d3376f93eL151"},"enable")," functionality with filters as implemented in ",Object(r.mdx)("a",{parentName:"p",href:"https://github.com/paritytech/cumulus/tree/master/polkadot-parachains/statemint"},"Statemint"),"."))),Object(r.mdx)("h4",{id:"for-large-runtimes"},"For large runtimes"),Object(r.mdx)("p",null,"It is less favorable to perform storage upgrades for large runtimes. In these cases, you can:"),Object(r.mdx)("ol",null,Object(r.mdx)("li",{parentName:"ol"},Object(r.mdx)("p",{parentName:"li"},"Generate the genesis state of your chain with full runtime functionality (including all the pallets)")),Object(r.mdx)("li",{parentName:"ol"},Object(r.mdx)("p",{parentName:"li"},"Remove all pallets that you will not need upon parachain launch from your runtime")),Object(r.mdx)("li",{parentName:"ol"},Object(r.mdx)("p",{parentName:"li"},"Re-build the WASM blob (validation logic) and the runtime of the chain")),Object(r.mdx)("li",{parentName:"ol"},Object(r.mdx)("p",{parentName:"li"},"Register your parachain with the updated genesis and the WASM blob generated in (3)")),Object(r.mdx)("li",{parentName:"ol"},Object(r.mdx)("p",{parentName:"li"},"After your parachain is live you can upgrade your runtime on-chain to include the missing pallets (ensure that pallet indices and names match those used to generate the genesis state in step (1) without having to do storage migrations. For more information on on-chain runtime upgrades refer to the next section."))),Object(r.mdx)("h2",{id:"examples"},"Examples"),Object(r.mdx)("ul",null,Object(r.mdx)("li",{parentName:"ul"},Object(r.mdx)("a",{parentName:"li",href:"https://github.com/paritytech/cumulus/pull/476"},"Statemine runtime deployment"))),Object(r.mdx)("h2",{id:"resources"},"Resources"),Object(r.mdx)("h4",{id:"knowledgebase"},"Knowledgebase"),Object(r.mdx)("ul",null,Object(r.mdx)("li",{parentName:"ul"},Object(r.mdx)("a",{parentName:"li",href:"https://substrate.dev/docs/en/knowledgebase/runtime/benchmarking"},"Benchmarking"))))}d.isMDXComponent=!0}}]);